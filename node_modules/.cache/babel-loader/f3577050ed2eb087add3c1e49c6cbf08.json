{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marcosandaluzderosas/Desktop/NuclioDigitalSchool/Picturest/picturestRichard/picturestReact/src/components/pinForm/PinForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"../pinForm/pinForm.css\";\n\nconst PinForm = () => {\n  _s();\n\n  const [selectedBoard, setSelectedBoard] = useState();\n  const [pinName, setPinName] = useState();\n  const [image, setImage] = useState();\n  const [source, setSource] = useState();\n  const [description, setDescription] = useState();\n  const [boards, setBoards] = useState([]);\n  const localStorageUser = JSON.parse(localStorage.getItem(\"user\"));\n  let userId = null;\n\n  if (localStorageUser === null) {\n    userId = 1;\n  } else {\n    userId = localStorageUser._id;\n  }\n\n  useEffect(() => {\n    if (localStorageUser) {\n      fetch(`http://localhost:5001/api/users/${localStorageUser._id}/boards`) //http://localhost:5000/api/users/21/boards ruta correcta\n      .then(promise => {\n        if (promise.status === 200) {\n          return promise.json();\n        }\n      }).then(json => setBoards(json));\n    }\n  }, []);\n  console.log(\"holaaaAKSDSAJKDJDKSA\" + boards);\n  const body = {\n    author: userId,\n    board: selectedBoard,\n    name: pinName,\n    urlImage: image,\n    source: source,\n    description: description\n  };\n\n  const handleSubmit = () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    };\n    fetch(\"http://localhost:5001/api/pins\", options).then(response => response.json());\n  }; // Ya hace el POST de lo qe tu le mandes.\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"pinForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Pin Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"pinName\",\n      onChange: e => setPinName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"image\",\n      onChange: e => setImage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Source\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"source\",\n      onChange: e => setSource(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select your desired Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedBoard(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"----\",\n        children: \"----\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), boards.map(board => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: board._id,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this);\n      }), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      type: \"submit\",\n      children: \"Enviar pin!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PinForm, \"zapNjvn1pfcN/ZBEDOpAlgswK5E=\");\n\n_c = PinForm;\nexport default PinForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PinForm\");","map":{"version":3,"sources":["/Users/marcosandaluzderosas/Desktop/NuclioDigitalSchool/Picturest/picturestRichard/picturestReact/src/components/pinForm/PinForm.js"],"names":["useState","useEffect","PinForm","selectedBoard","setSelectedBoard","pinName","setPinName","image","setImage","source","setSource","description","setDescription","boards","setBoards","localStorageUser","JSON","parse","localStorage","getItem","userId","_id","fetch","then","promise","status","json","console","log","body","author","board","name","urlImage","handleSubmit","options","method","headers","stringify","response","e","target","value","map","title"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport \"../pinForm/pinForm.css\";\n\nconst PinForm = () => {\n  const [selectedBoard, setSelectedBoard] = useState();\n  const [pinName, setPinName] = useState();\n  const [image, setImage] = useState();\n  const [source, setSource] = useState();\n  const [description, setDescription] = useState();\n\n  const [boards, setBoards] = useState([]);\n\n  const localStorageUser = JSON.parse(localStorage.getItem(\"user\"));\n\n  let userId = null;\n  if (localStorageUser === null) {\n    userId = 1;\n  } else {\n    userId = localStorageUser._id;\n  }\n\n  useEffect(() => {\n    if (localStorageUser) {\n      fetch(`http://localhost:5001/api/users/${localStorageUser._id}/boards`) //http://localhost:5000/api/users/21/boards ruta correcta\n        .then((promise) => {\n          if (promise.status === 200) {\n            return promise.json();\n          }\n        })\n        .then((json) => setBoards(json));\n    }\n  }, []);\n\n  console.log(\"holaaaAKSDSAJKDJDKSA\" + boards);\n\n  const body = {\n    author: userId,\n    board: selectedBoard,\n    name: pinName,\n    urlImage: image,\n    source: source,\n    description: description,\n  };\n\n  const handleSubmit = () => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    fetch(\"http://localhost:5001/api/pins\", options).then((response) =>\n      response.json()\n    );\n  }; // Ya hace el POST de lo qe tu le mandes.\n\n  return (\n    <form className=\"pinForm\">\n      <label>Pin Name</label>\n      <input\n        type=\"text\"\n        name=\"pinName\"\n        onChange={(e) => setPinName(e.target.value)}\n      />\n      <label>Image</label>\n      <input\n        type=\"text\"\n        name=\"image\"\n        onChange={(e) => setImage(e.target.value)}\n      />\n      <label>Source</label>\n      <input\n        type=\"text\"\n        name=\"source\"\n        onChange={(e) => setSource(e.target.value)}\n      />\n      <label>Description</label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <label>Select your desired Board</label>\n      <select onChange={(e) => setSelectedBoard(e.target.value)}>\n        <option value=\"----\">----</option>\n        {boards.map((board) => {\n          return <option value={board._id}>{board.title}</option>;\n        })}\n        ;\n      </select>\n\n      <button onClick={handleSubmit} type=\"submit\">\n        Enviar pin!\n      </button>\n    </form>\n  );\n};\n\nexport default PinForm;\n"]},"metadata":{},"sourceType":"module"}